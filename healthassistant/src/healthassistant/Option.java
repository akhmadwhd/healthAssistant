/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package healthassistant;

import javax.swing.JOptionPane;

/**
 *
 * @author akhma
 */
public class Option extends javax.swing.JFrame {

    /**
     * Creates new form Option
     */
    public Option() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Cek");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Pada Bagian Tubuh Mana Yang Mengalami Keluhan?");

        jRadioButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jRadioButton1.setText("Kepala");

        jRadioButton2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jRadioButton2.setText("Dada");

        jRadioButton3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jRadioButton3.setText("Perut");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jRadioButton3)
                    .addComponent(jRadioButton2)
                    .addComponent(jRadioButton1))
                .addContainerGap(74, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton1)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton2)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton3)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jLabel2.setText("Pilihlah Salah Satu ");

        jButton2.setText("Keluar");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(118, 118, 118))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
     if (jRadioButton1.isSelected() == true) {
         int tegang = JOptionPane.showOptionDialog(this, 
         "Apakah Anda Rasa sakit yang cenderung memengaruhi kedua sisi kepala Anda?", 
         "Diagnosis", 
         JOptionPane.YES_NO_OPTION, 
         JOptionPane.QUESTION_MESSAGE, null, null, null);
            if (tegang == JOptionPane.YES_OPTION) {
                int alis = JOptionPane.showOptionDialog(this, 
                "Apakah Tekanan terasa intens di atas alis?", 
                "Diagnosis", 
                JOptionPane.YES_NO_OPTION, 
                JOptionPane.QUESTION_MESSAGE, null, null, null);
                    if (alis == JOptionPane.YES_OPTION) {
                        int area = JOptionPane.showOptionDialog(this, 
                        "Apakah Tekanan terasa intens di atas alis?", 
                        "Diagnosis", 
                        JOptionPane.YES_NO_OPTION, 
                        JOptionPane.QUESTION_MESSAGE, null, null, null);
                            if (area  == JOptionPane.YES_OPTION) {
                                JOptionPane.showMessageDialog(this, "Kemungkinan Anda mengalami penyakit kepala tegang(tension headache) .Disarankan untuk melakukan konsultasi ke dokter terdekat");
                                new RumahSakit().setVisible(true);
                                dispose();
                            } else {
                                JOptionPane.showMessageDialog(this, "Disarankan Melakukan Medical Check Up Rutin");
                                new RumahSakit().setVisible(true);
                                dispose();
                            }
                    } else {
                        int area = JOptionPane.showOptionDialog(this, 
                        "Terasa sakit pada kepala atau nyeri yang terasa berdenyut, namun hanya terasa di satu sisi kepala ?", 
                        "Diagnosis", 
                        JOptionPane.YES_NO_OPTION, 
                        JOptionPane.QUESTION_MESSAGE, null, null, null);
                            if (area == JOptionPane.YES_OPTION) {
                                JOptionPane.showMessageDialog(this, "Kemungkinan Anda mengalami penyakit migrain .Disarankan untuk melakukan konsultasi ke dokter terdekat");
                                new RumahSakit().setVisible(true);
                                dispose();
                            }  else {
                                JOptionPane.showMessageDialog(this, "Maaf Gejala Yang Anda Cari Tidak Ditemukan");
                            }
                    }
            } else {
                JOptionPane.showMessageDialog(this, "Maaf Gejala Yang Anda Cari Tidak Ditemukan");
            }
     }else if (jRadioButton2.isSelected() == true) {
         int dada = JOptionPane.showOptionDialog(this, 
         "Nyeri Dada?", 
         "Diagnosis", 
         JOptionPane.YES_NO_OPTION, 
         JOptionPane.QUESTION_MESSAGE, null, null, null);
            if(dada == JOptionPane.YES_OPTION){
                int satu = JOptionPane.showOptionDialog(this, 
                "Apakah Bisa Ditunjukkan dengan satu ?", 
                "Diagnosis", 
                JOptionPane.YES_NO_OPTION, 
                JOptionPane.QUESTION_MESSAGE, null, null, null);  
                    if ( satu == JOptionPane.YES_OPTION ) {
                        JOptionPane.showMessageDialog(this, "Disarankan Melakukan Medical Check Up Rutin");
                        new RumahSakit().setVisible(true);
                        dispose();
                    } else {
                        int nyeri = JOptionPane.showOptionDialog(this, 
                        "Apakah Nyerinya seperti di himpit/ditekan ditengah dada?", 
                        "Diagnosis", 
                        JOptionPane.YES_NO_OPTION, 
                        JOptionPane.QUESTION_MESSAGE, null, null, null);
                            if (nyeri == JOptionPane.YES_OPTION  ) {
                                int ulu = JOptionPane.showOptionDialog(this, 
                                "Apakah menjalar ke bagian ulu hati, punggung, lengan sama leher/rahang?", 
                                "Diagnosis", 
                                JOptionPane.YES_NO_OPTION, 
                                JOptionPane.QUESTION_MESSAGE, null, null, null);
                                    if (ulu == JOptionPane.YES_OPTION) {
                                        int akt = JOptionPane.showOptionDialog(this, 
                                        "Apakah nyerinya timbul saat beraktifitas?", 
                                        "Diagnosis", 
                                        JOptionPane.YES_NO_OPTION, 
                                        JOptionPane.QUESTION_MESSAGE, null, null, null);
                                            if (akt == JOptionPane.YES_OPTION) {
                                                JOptionPane.showMessageDialog(this, "Kemungkinan Anda mengalami penyakit jantung koroner.Disarankan untuk melakukan konsultasi ke dokter jantung terdekat");
                                                new RumahSakit().setVisible(true);
                                                dispose();
                                            } else {
                                                int keringat = JOptionPane.showOptionDialog(this, 
                                                "Apakah disertai keringat dingin?", 
                                                "Diagnosis", 
                                                JOptionPane.YES_NO_OPTION, 
                                                JOptionPane.QUESTION_MESSAGE, null, null, null);
                                                    if (keringat == JOptionPane.YES_OPTION) {
                                                        int mual = JOptionPane.showOptionDialog(this, 
                                                        "Apakah disertai mual muntah??", 
                                                        "Diagnosis", 
                                                        JOptionPane.YES_NO_OPTION, 
                                                        JOptionPane.QUESTION_MESSAGE, null, null, null);
                                                            if (mual == JOptionPane.YES_OPTION) {
                                                                JOptionPane.showMessageDialog(this, "Kemungkinan Anda mengalami penyakit jantung koroner.Disarankan untuk melakukan konsultasi ke dokter jantung terdekat");
                                                                new RumahSakit().setVisible(true);
                                                                dispose();
                                                            } else {
                                                                JOptionPane.showMessageDialog(this, "Kemungkinan Anda mengalami penyakit jantung koroner.Disarankan untuk melakukan konsultasi ke dokter jantung terdekat");
                                                                new RumahSakit().setVisible(true);
                                                                dispose();
                                                            }
                                                    } else {
                                                        JOptionPane.showMessageDialog(this, "Kemungkinan Anda mengalami penyakit jantung koroner.Disarankan untuk melakukan konsultasi ke dokter jantung terdekat");
                                                        new RumahSakit().setVisible(true);
                                                        dispose();
                                                    }
                                            }
                                    } else {
                                        JOptionPane.showMessageDialog(this, "Kemungkinan Anda mengalami penyakit jantung koroner.Disarankan untuk melakukan konsultasi ke dokter jantung terdekat");
                                        new RumahSakit().setVisible(true);
                                        dispose();
                                    }
                            } else {
                                int hati = JOptionPane.showOptionDialog(this, 
                                "Apakah ada nyeri di ulu hati seperti mengganjal/ penuh?", 
                                "Diagnosis", 
                                JOptionPane.YES_NO_OPTION, 
                                JOptionPane.QUESTION_MESSAGE, null, null, null);
                                    if (hati == JOptionPane.YES_OPTION) {
                                        int ulu = JOptionPane.showOptionDialog(this, 
                                        "Apakah menjalar ke bagian ulu hati, punggung, lengan sama leher/rahang?", 
                                        "Diagnosis", 
                                        JOptionPane.YES_NO_OPTION, 
                                        JOptionPane.QUESTION_MESSAGE, null, null, null); 
                                            if (ulu == JOptionPane.YES_OPTION) {
                                                int akt = JOptionPane.showOptionDialog(this, 
                                                "Apakah nyerinya timbul saat beraktifitas?", 
                                                "Diagnosis", 
                                                JOptionPane.YES_NO_OPTION, 
                                                JOptionPane.QUESTION_MESSAGE, null, null, null);
                                                    if (akt == JOptionPane.YES_OPTION) {
                                                        JOptionPane.showMessageDialog(this, "Kemungkinan Anda mengalami penyakit jantung koroner.Disarankan untuk melakukan konsultasi ke dokter jantung terdekat");
                                                        new RumahSakit().setVisible(true);
                                                        dispose();
                                                    } else {
                                                        int keringat = JOptionPane.showOptionDialog(this, 
                                                        "Apakah disertai keringat dingin?", 
                                                        "Diagnosis", 
                                                        JOptionPane.YES_NO_OPTION, 
                                                        JOptionPane.QUESTION_MESSAGE, null, null, null);
                                                            if (keringat == JOptionPane.YES_OPTION) {
                                                                int mual = JOptionPane.showOptionDialog(this, 
                                                                "Apakah disertai mual muntah??", 
                                                                "Diagnosis", 
                                                                JOptionPane.YES_NO_OPTION, 
                                                                JOptionPane.QUESTION_MESSAGE, null, null, null);
                                                                    if (mual == JOptionPane.YES_OPTION) {
                                                                        JOptionPane.showMessageDialog(this, "Kemungkinan Anda mengalami penyakit jantung koroner.Disarankan untuk melakukan konsultasi ke dokter jantung terdekat");
                                                                        new RumahSakit().setVisible(true);
                                                                        dispose();
                                                                    } else {
                                                                        JOptionPane.showMessageDialog(this, "Kemungkinan Anda mengalami penyakit jantung koroner.Disarankan untuk melakukan konsultasi ke dokter jantung terdekat");
                                                                        new RumahSakit().setVisible(true);
                                                                        dispose();
                                                                    }
                                                            } else {
                                                                JOptionPane.showMessageDialog(this, "Kemungkinan Anda mengalami penyakit jantung koroner.Disarankan untuk melakukan konsultasi ke dokter jantung terdekat");
                                                                new RumahSakit().setVisible(true);
                                                                dispose();
                                                            }
                                                    }
                                            } else {
                                                JOptionPane.showMessageDialog(this, "Kemungkinan Anda mengalami penyakit jantung koroner.Disarankan untuk melakukan konsultasi ke dokter jantung terdekat");
                                                new RumahSakit().setVisible(true);
                                                dispose();
                                            }
                                    } else {
                                        JOptionPane.showMessageDialog(this, "Disarankan Melakukan Medical Check Up Rutin");
                                        new RumahSakit().setVisible(true);
                                        dispose();
                                    }
                                
                            }
                    }

            } else {
                int nafas = JOptionPane.showOptionDialog(this, 
                    "Sesak Nafas?", 
                    "Diagnosis", 
                    JOptionPane.YES_NO_OPTION, 
                    JOptionPane.QUESTION_MESSAGE, null, null, null);
                    if (nafas == JOptionPane.YES_OPTION){
                          int sesak = JOptionPane.showOptionDialog(this, 
                          "Apakah sesak nafas dipicu saat aktifitas?", 
                          "Diagnosis", 
                          JOptionPane.YES_NO_OPTION, 
                          JOptionPane.QUESTION_MESSAGE, null, null, null); 
                            if (sesak == JOptionPane.YES_OPTION) {
                                int bangun = JOptionPane.showOptionDialog(this, 
                                "Apakah pernah terbangun saat tidur karena sesak ?", 
                                "Diagnosis", 
                                JOptionPane.YES_NO_OPTION, 
                                JOptionPane.QUESTION_MESSAGE, null, null, null); 
                                    if (bangun == JOptionPane.YES_OPTION) {
                                        int terlentang = JOptionPane.showOptionDialog(this, 
                                        "Apakah anda tidak dapat tidur secara terlentang ?", 
                                        "Diagnosis", 
                                        JOptionPane.YES_NO_OPTION, 
                                        JOptionPane.QUESTION_MESSAGE, null, null, null);
                                            if (terlentang == JOptionPane.YES_OPTION) {
                                                int bengkak = JOptionPane.showOptionDialog(this, 
                                                "Apakah disertai bengkak dikedua tungkai ? ?", 
                                                "Diagnosis", 
                                                JOptionPane.YES_NO_OPTION, 
                                                JOptionPane.QUESTION_MESSAGE, null, null, null);
                                                    if (bengkak  == JOptionPane.YES_OPTION) {
                                                        JOptionPane.showMessageDialog(this, "Kemungkinan Anda Mengalami Lemah Jantung, Disarankan Konsultasi ke dokter spesialis jantung");
                                                        new RumahSakit().setVisible(true);
                                                        dispose();
                                                    } else {
                                                        JOptionPane.showMessageDialog(this, "Kemungkinan Anda Mengalami Lemah Jantung, Disarankan Konsultasi ke dokter spesialis jantung");
                                                        new RumahSakit().setVisible(true);
                                                        dispose();
                                                    }
                                            } else {
                                                JOptionPane.showMessageDialog(this, "Kemungkinan Anda Mengalami Lemah Jantung, Disarankan Konsultasi ke dokter spesialis jantung");
                                                new RumahSakit().setVisible(true);
                                                dispose();
                                            }
                                    } else {
                                        JOptionPane.showMessageDialog(this, "Kemungkinan Anda Mengalami Lemah Jantung, Disarankan Konsultasi ke dokter spesialis jantung");
                                        new RumahSakit().setVisible(true);
                                        dispose();
                                    }
                            } else {
                                 int bengkak = JOptionPane.showOptionDialog(this, 
                                 "Apakah Anda mengalami sesak disertai bengkak dikedua tungkai ?", 
                                 "Diagnosis", 
                                 JOptionPane.YES_NO_OPTION, 
                                 JOptionPane.QUESTION_MESSAGE, null, null, null);
                                    if (bengkak == JOptionPane.YES_OPTION) {
                                        JOptionPane.showMessageDialog(this, "Kemungkinan Anda Mengalami Lemah Jantung, Disarankan Konsultasi ke dokter spesialis jantung");
                                        new RumahSakit().setVisible(true);
                                        dispose();
                                    } else {
                                        JOptionPane.showMessageDialog(this, "Kemungkinan sesak yang anda alami disebabkan penyakit lain, disarankan konsultasi ke dokter spesialis paru atau dokter spesialis penyakit dalam");
                                        new RumahSakit().setVisible(true);
                                        dispose();
                                    }
                            }
                    }else {
                       JOptionPane.showMessageDialog(this, "Maaf Gejala Yang Anda Cari Tidak Ditemukan");
                    }
            }
     } else if (jRadioButton3.isSelected() == true) {
         int perut = JOptionPane.showOptionDialog(this, 
         "Demam?", 
         "Diagnosis", 
         JOptionPane.YES_NO_OPTION, 
         JOptionPane.QUESTION_MESSAGE, null, null, null);
            if (perut == JOptionPane.YES_OPTION) {
                int nyeri = JOptionPane.showOptionDialog(this, 
                "Nyeri Perut?", 
                "Diagnosis", 
                JOptionPane.YES_NO_OPTION, 
                JOptionPane.QUESTION_MESSAGE, null, null, null);
                    if (nyeri == JOptionPane.YES_OPTION) {
                        int bab = JOptionPane.showOptionDialog(this, 
                        "Bab Cair 4x Sehari?", 
                        "Diagnosis", 
                        JOptionPane.YES_NO_OPTION, 
                        JOptionPane.QUESTION_MESSAGE, null, null, null);
                            if (bab == JOptionPane.YES_OPTION) {
                                JOptionPane.showMessageDialog(this, "Kemungkinan Anda Mengalami Diare, Disarankan Konsultasi ke dokter");
                                new RumahSakit().setVisible(true);
                                dispose();
                            } else {
                                int darah = JOptionPane.showOptionDialog(this, 
                                "Pendarahan?", 
                                "Diagnosis", 
                                JOptionPane.YES_NO_OPTION, 
                                JOptionPane.QUESTION_MESSAGE, null, null, null);
                                    if (darah == JOptionPane.YES_OPTION) {
                                        JOptionPane.showMessageDialog(this, "Kemungkinan Anda Mengalami Demam Berdarah, Disarankan Konsultasi ke dokter");
                                        new RumahSakit().setVisible(true);
                                        dispose();
                                    } else {
                                        JOptionPane.showMessageDialog(this, "Disarankan Melakukan Medical Check Up Rutin");
                                        new RumahSakit().setVisible(true);
                                        dispose();
                                    }
                            }
                    } else {
                        JOptionPane.showMessageDialog(this, "Disarankan Melakukan Medical Check Up Rutin");
                        new RumahSakit().setVisible(true);
                        dispose();
                    }
            } else {
                JOptionPane.showMessageDialog(this, "Maaf Gejala Yang Anda Cari Tidak Ditemukan");
            }
     } else {
         JOptionPane.showMessageDialog(this, "Pilih Salah Satu!!!");
     }
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        new MainMenu().setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Option.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Option.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Option.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Option.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Option().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    // End of variables declaration//GEN-END:variables
}
